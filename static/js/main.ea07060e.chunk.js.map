{"version":3,"sources":["addNewRecipe.js","mealplan.js","searchBar.js","bargraph.js","piegraph.js","charts.js","controller.js","index.js"],"names":["AddNewRecipe","className","onSubmit","event","props","id","onChange","type","React","Component","Mealplan","console","log","this","meals","onClick","mealPlanIngredients","map","meal","scope","i","label","m","time","length","recipe","name","draggable","onDrag","onDrop","onDragOver","SearchBar","value","filterText","target","Bargraph","state","drawBarChart","bind","dataSet","filter","d","includes","$","width","data","handleFilter","height","d3","refs","bargraph","selectAll","remove","svg","append","attr","dataAmounts","push","amount","scale","domain","range","clamp","barHeight","enter","text","ref","term","setState","drawMacros","radius","Math","min","piegraph","dataset","theSum","forEach","dPoint","newData","color","data_ready","pie","innerRadius","outerRadius","key","Charts","nutrients","title","hideCategory","filterData","Controller","setMicros","data-index","max","ingredients","createData","round","random","calcium","category","subCategory","magnesium","potassium","vitaminB12","vitaminD","vitaminC","zinc","iron","dailyCal","protein","floor","fat","carbs","fillNutrients","ingredient","Object","keys","nutrient","calculateNutrients","Infograph","nameBar","hover","mealplan","newNutrients","barGraphTitle","preventDefault","nameRecipe","newRecipe","newMicros","theIng","ing","index","idStr","toString","find","addClass","removeClass","checkNutPerIngredient","array","el","e","newIngredients","slice","getAttribute","Number","innerText","prev","toggleClass","filtIngs","setNewIds","newMealplan","filtPlan","newIngs","newMeal","day","keydown","keyCode","filteredMeal","hasClass","parentElement","updatedPlan","removeHighlights","object","arrayForD3","nutrientObj","tempNut","tempNutrients","fillNewNut","handleSubmit","onDropRecipe","setMicrosPerIngredient","handleChange","handleDelete","addIngredient","onDragRecipe","minimize","filterCategories","onDragMeal","onDropMeal","deleteMeal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea07060e.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass AddNewRecipe extends React.Component {\n\n  render(){\n    return(\n      <div className=\"col addNew\">\n          <form className=\"form-inline\" onSubmit = {(event) => this.props.onSubmit(event)}>\n              <div id=\"recipeName\" className=\"form-group mb-2\">\n                  <label>Recipe Name</label>\n                  <input id=\"recipeName\" className = \"form-control\" onChange={(event)=>this.props.onChange(event)}/>\n              </div>\n              <div className=\"form-group mb-2\">\n                  <button type=\"submit\" className = \"btn btn-block btn-primary\"\n                    >\n                    Create a new recipe\n                  </button>\n              </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default AddNewRecipe\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass Mealplan extends React.Component {\n\n  render(){\n    console.log(this.props.meals);\n    const meals = ['breakfast','lunch','dinner']\n    return(\n      <div>\n        <div className=\"row\">\n        <div className=\"col-2\">\n          <h2>Meal Plan</h2>\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary\"\n                  onClick={this.props.mealPlanIngredients}\n          >\n            Click to see the nutrients\n          </button>\n        </div>\n        </div>\n        <table className=\"table\">\n            <thead>\n              <tr>\n                {meals.map(meal => (\n                  <th scope=\"col-4\">{meal}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr id=\"monday\">\n                  {meals.map((meal,i) => {\n                    let label = ''\n                    console.log(meal)\n                    console.log(this.props.meals[i]);\n                    this.props.meals.map(m => {\n                      if(m.time === meal && this.props.meals.length > 0){\n                        label = m.recipe.name;\n                      }\n                    })\n                    console.log(label)\n                    return(\n                    <td id={meal}\n                          draggable\n                          onDrag={this.props.onDrag}\n                          className=\"meal\"\n                          onDrop={this.props.onDrop}\n                          onDragOver={this.props.onDragOver}\n                          onClick={this.props.onClick}\n                    >\n                    {label}\n                    </td>\n                  )})\n                }\n              </tr>\n            </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Mealplan\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass SearchBar extends React.Component {\n\n  render(){\n    const meals = ['breakfast','lunch','dinner']\n    return(\n      <div className=\"row searchBar\">\n        <div className=\"col-5\">\n          <form>\n            <div className=\"form-group\">\n              <input className=\"form-control\" value={this.props.filterText} onChange = {(event) => {this.props.onChange(event.target.value)}}></input>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar\n","import React, { Component } from 'react'\nimport * as d3 from 'd3';\nimport $ from 'jquery';\nimport SearchBar from './searchBar';\n\nclass Bargraph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          filterText: '',\n        }\n        this.drawBarChart = this.drawBarChart.bind(this)\n    }\n\n    componentDidMount(){\n      this.drawBarChart();\n    }\n\n    componentDidUpdate(){\n      this.drawBarChart();\n    }\n\n    handleFilter(){\n      //console.log(this.props.dataSet);\n      let newData = [... this.props.dataSet];\n      let filteredData = newData.filter((d)=>(d.name.includes(this.state.filterText)))\n      return filteredData;\n\n    }\n\n    drawBarChart(){\n      console.log($( \".bargraph\" ).width())\n      //console.log(this.props.dataSet);\n      let data = this.handleFilter();\n      let width = $( \".bargraph\" ).width()*.75;\n      console.log(width)\n      let height = data.length * 50\n      //console.log(width)\n      d3.select(this.refs.bargraph).selectAll(\"svg\").remove();\n\n      const svg = d3.select(this.refs.bargraph)\n        .append('svg')\n        .attr('width', \"100%\")\n        .attr('height', height)\n\n      var dataAmounts = [];\n      data.map(d => {dataAmounts.push(d.amount)})\n      //console.log(dataAmounts);\n      var scale = d3.scaleLinear()\n                  .domain([d3.min(dataAmounts), d3.max(dataAmounts)])\n                  .range([1, width])\n                  .clamp(false)\n\n      //console.log(scale(data[1].amount));\n\n      var barPadding = 5;\n      var barHeight = (height/data.length - 5);\n      //console.log(data);\n\n        svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"y\", function(d,i){return (i * (barHeight + barPadding))})\n        .attr(\"x\", width/3)\n        .attr(\"height\", barHeight)\n        .attr(\"width\", function(d){return (scale(d.amount) + \"px\")})\n        .attr(\"fill\", \"blue\")\n\n        svg.selectAll('text')\n          .data(data)\n          .enter()\n          .append('text')\n          .attr('x', 10)\n          .attr('y', (d, i) => i * (barHeight + barPadding) + barHeight/2)\n          .text(d => d.name)\n      }\n\n    render() {\n        //console.log(this.props.dataSet);\n        return(\n          <div className=\"bargraph\" ref=\"bargraph\">\n            <SearchBar\n              filterText= {this.state.filterText}\n              onChange = {(term) => {this.setState({filterText: term});}}\n            />\n          </div>\n        );\n    }\n}\nexport default Bargraph\n","import React, { Component } from 'react'\nimport * as d3 from 'd3';\nclass Bargraph extends Component {\n    constructor(props) {\n        super(props)\n        this.drawMacros = this.drawMacros.bind(this)\n    }\n\n    componentDidMount(){\n      this.drawMacros()\n    }\n\n    componentDidUpdate(){\n      this.drawMacros()\n    }\n\n    drawMacros(){\n\n    \t// set the dimensions and margins of the graph\n    var width = 450;\n    var height = 450;\n    var margin = 40;\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n\n    d3.select(this.refs.piegraph).selectAll(\"svg\").remove();\n\n    var svg = d3.select(this.refs.piegraph)\n      .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // Create dummy data\n    var dataset = this.props.dataSet;\n    //console.log(dataset);\n    var theSum = 0;\n    dataset.forEach((dPoint) =>{\n      theSum += dPoint.amount\n    });\n    //console.log(theSum)\n    var newData = [];\n    dataset.forEach((d)=>{\n      newData.push((d.amount/theSum)*100)\n    })\n    //console.log(newData);\n\n\n\n    // set the color scale\n    var color = d3.scaleOrdinal()\n      .domain(newData)\n      .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\"])\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie()\n      .value(function(d) {return d.value; })\n    var data_ready = pie(d3.entries(newData))\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('sector')\n      .data(data_ready)\n      .enter()\n      .append('path')\n      .attr('d', d3.arc()\n        .innerRadius(100)\n        .outerRadius(radius)\n      )\n      .attr('fill', function(d){ return(color(d.data.key)) })\n\n    }\n\n\n    render() { return(<div className=\"piegraph\" ref=\"piegraph\"></div>); }\n}\nexport default Bargraph\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\nimport Bargraph from './bargraph'\nimport Piegraph from './piegraph'\n\nclass Charts extends React.Component {\n\n  render(){\n    console.log(this.props.nutrients);\n    //console.log(this.props.nutrients)\n    const meals = ['breakfast','lunch','dinner']\n    return(\n      <div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Nutrients of {this.props.title}</h2>\n          </div>\n        </div>\n        <nav>\n            <ul className=\"nav nav-tabs\">\n              <li className=\"active nav-item\" onClick={event => this.props.hideCategory(event)}>\n                Micros\n              </li>\n              <li className=\"nav-item\" onClick={event => this.props.hideCategory(event)}>\n                Macros\n              </li>\n            </ul>\n        </nav>\n        <div id=\"Macros\" className=\"nutrients hide\">\n            <Piegraph\n              dataSet = {this.props.filterData(this.props.nutrients, \"macro\")}\n            />\n        </div>\n        <div id=\"Micros\" className=\"nutrients\">\n            <Bargraph\n              dataSet = {this.props.filterData(this.props.nutrients, \"micro\")}\n            />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Charts\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass Controller extends React.Component {\n\n  render(){\n    return(\n      <div id = {this.props.id} className=\"row ingredient\">\n        <div className=\"col-3\">\n          <p onClick={()=>this.props.setMicros(this.props.name)}>{this.props.name}</p>\n        </div>\n        <div className=\"col slidecontainer\">\n          <input\n            data-index={this.props.id}\n            type=\"range\"\n            min=\"0\"\n            max=\"100\" value = {this.props.amount}\n            className=\"slider\"\n            id=\"myRange\"\n            onChange={this.props.onChange}\n          />\n        </div>\n        <div className=\"col-1\">\n          <p>{this.props.amount}</p>\n        </div>\n        <div className=\"col-2\">\n          <button\n          className = \"btn btn-block btn-primary\"\n          onClick = {() => this.props.remove(this.props.id)}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Controller\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.css';\nimport $ from 'jquery';\nimport AddNewRecipe from './addNewRecipe'\nimport Mealplan from './mealplan'\nimport Charts from './charts'\nimport Controller from './controller'\n\nconst ingredients = [];\n\nfunction createData(id){\n  const amount = Math.round(Math.random()*100);\n  const ingredient = {\n    name: \"ingredient\" + id,\n    id: id,\n    amount: amount,\n    nutrients:{\n        calcium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                },\n        magnesium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        potassium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        vitaminB12: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        vitaminD: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        vitaminC: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        zinc: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        iron: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        dailyCal: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        protein: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n        fat: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n        carbs: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n    }\n  }\n\n  return ingredient;\n\n}\n\nfor(var i=0; i<10; i++){\n  ingredients.push(createData(i));\n}\n\nfunction calculateNutrients(ingredient, nutrients){\n  Object.keys(ingredient.nutrients).map((nutrient)=>{\n    if(!nutrients[nutrient]){\n      nutrients[nutrient] = ingredient.amount * ingredient.nutrients[nutrient].amount;\n      //console.log(micros[nutrient]);\n    }else{\n      nutrients[nutrient] += ingredient.amount * ingredient.nutrients[nutrient].amount;\n      //console.log(micros[nutrient]);\n    }\n  })\n}\n\nfunction fillNutrients(ingredients){\n  let nutrients = {};\n  ingredients.map(ingredient=>{\n      calculateNutrients(ingredient,nutrients);\n    })\n  return nutrients\n}\n\nclass Infograph extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nameBar: '',\n      recipe: {\n        name: 'Lasagne',\n        ingredients: ingredients,\n      },\n      nutrients:fillNutrients(ingredients),\n      hover: '',\n      meal: null,\n      mealplan: {\n        meals:[],\n        nutrients:{}\n      },\n      filterText: '',\n      d3: ''\n    }\n  }\n\n  setMicrosPerIngredient(name){\n    //console.log(name);\n    let newIngredients = this.state.recipe.ingredients.filter(ingredient=>(\n      ingredient.name == name\n    ))\n    //console.log(newIngredients);\n    let newNutrients = fillNutrients(newIngredients);\n    //console.log(newNutrients);\n    this.setState({\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: this.state.recipe.ingredients,\n        nutrients:newNutrients,\n      },\n      barGraphTitle: name,\n    });\n  }\n\n  handleSubmit(event){\n\n    event.preventDefault();\n    let nameRecipe = this.state.nameBar;\n    //console.log(nameRecipe)\n    let newRecipe = [];\n    for(var i =0; i<10; i++){\n      newRecipe.push(createData(i));\n    }\n    let newMicros = fillNutrients(newRecipe);\n    console.log(newMicros)\n\n    this.setState(\n      {\n        recipe:{\n          name: nameRecipe,\n          ingredients: newRecipe,\n        },\n        nutrients:newMicros,\n        barGraphTitle: nameRecipe,\n      }\n    );\n  }\n\n  checkNutPerIngredient(nutrient){\n      //console.log(nutrient);\n      let theIng = this.state.recipe.ingredients[0];\n      this.state.recipe.ingredients.map((ing, index) => {\n        if(ing.amount > 0 && nutrient.length>2 && ing.amount * ing.nutrients[nutrient].amount > ing.amount * theIng.nutrients[nutrient].amount){\n          //console.log(\"we are here\");\n          //console.log(\"ollaan täällä\")\n          theIng = ing;\n          console.log(theIng.id);\n        }\n      })\n\n      let id = nutrient.length>2 ? theIng.id : null\n      if(id !== null){\n        let idStr = id.toString();\n        var el = $('#'+ idStr ).find('.slider');\n        //console.log(el);\n        el.addClass(\"highlight\")\n      }\n\n      //return theIng.id;\n  }\n\n  highlightIngredient(event,nutrient){\n    console.log();\n    $('.bargraphs').find('p').removeClass(\"highlight-text\");\n    $(event.target).addClass(\"highlight-text\")\n    this.setState({\n      hover: nutrient\n    })\n    if(this.state.hover.length > 0){\n        this.checkNutPerIngredient(nutrient);\n    }\n  }\n\n  setNewIds(array){\n    array.map((el,index) => el.id = index)\n  }\n\n  removeHighlights(){\n    $('.slidecontainer').find('.slider').removeClass(\"highlight\")\n    $('.highlight').removeClass(\"highlight\");\n    $('.highlight-text').removeClass(\"highlight-text\");\n    this.setState({\n      hover: '',\n    })\n  }\n\n  handleChange(e){\n    const newIngredients = this.state.recipe.ingredients.slice();\n    newIngredients[e.target.getAttribute(\"data-index\")].amount = Number(e.target.value);\n    const newNutrients = fillNutrients(newIngredients);\n\n    //console.log(newIngredients[e.target.getAttribute(\"data-index\")].amount * newIngredients[e.target.getAttribute(\"data-index\")].nutrients[\"calcium\"].amount)\n    this.setState(\n      {\n        recipe:{\n          name: this.state.recipe.name,\n          ingredients: newIngredients,\n        },\n        nutrients: newNutrients,\n      }\n    );\n  }\n\n  hideCategory(e){\n      $(\".nutrientTab\").removeClass(\"active\");\n      $(e.target).addClass(\"active\");\n      //console.log(e.target);\n      //console.log(e.target.innerText);\n      $(\".nutrients\").addClass(\"hide\");\n      $(\"#\" + e.target.innerText).removeClass(\"hide\");\n    }\n\n  minimize(e){\n    console.log(\"HERE\")\n    $(e.target).prev().toggleClass(\"hide\")\n    this.setState({\n      mealplan: this.state.mealplan\n    });\n  }\n\n  handleDelete(id){\n      //console.log(\"REMOVE\")\n      //console.log(id)\n      let newIngredients = [... this.state.recipe.ingredients];\n      let filtIngs = newIngredients.filter(function(ing){\n        return(ing.id != id);\n      });\n      const newNutrients = fillNutrients(filtIngs);\n      //console.log(filtIngs);\n      this.setNewIds(this.state.recipe.ingredients);\n      this.setState({\n        recipe:{\n          name: this.state.recipe.name,\n          ingredients: filtIngs,\n        },\n        nutrients: newNutrients\n      });\n  }\n\n  deleteMeal(id,array){\n     console.log(\"REMOVE\")\n     console.log(array);\n     let newMealplan = []\n     if(array.length>1){\n       newMealplan = [... array];\n     }else{\n       newMealplan.push(array[0])\n     }\n\n     console.log(newMealplan);\n     //console.log(id);\n     //console.log(newMealplan[0].time)\n     let filtPlan = newMealplan.filter(function(meal){\n       //console.log(meal.time);\n       return(meal.time != id);\n     });\n     console.log(filtPlan);\n     let newNutrients = this.mealPlanIngredients(filtPlan);\n     this.setState({\n         mealplan: {\n           meals: filtPlan,\n           nutrients: newNutrients,\n         }\n     });\n     $(\"#\" + id).removeClass(\"meal-is-in\");\n     $(\"#\" + id).text(\"\");\n }\n\n  addIngredient(){\n    const newIngs = [...this.state.recipe.ingredients];\n    //console.log(\"NEW INGS IS \" + newIngs);\n    newIngs.push(createData(this.state.recipe.ingredients.length));\n    let newNutrients = fillNutrients(newIngs);\n    this.setState({\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: newIngs,\n      },\n      nutrients: newNutrients,\n      hover:'',\n    });\n  }\n\n  onDragRecipe(event, meal){\n    //console.log(\"onDragRecipe\")\n    let newMeal = {\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: this.state.recipe.ingredients,\n        nutrients: this.state.nutrients,\n      },\n      barGraphTitle: this.state.barGraphTitle,\n      day: '',\n      time: '',\n    }\n    //console.log(newMeal)\n    event.preventDefault();\n    this.setState({\n        meal: newMeal,\n    });\n    //console.log(this.state.meal)\n  }\n\n  onDragMeal(event){\n    //console.log(\"onDragMeal\")\n    let id = event.target.id;\n\n    $(\"#\" + id).keydown(e=>{\n      if(e.keyCode == 91){\n        $(\"#\" + id).removeClass(\"meal-is-in\");\n        console.log(\"POHJASSA\")\n      }\n    })\n\n    //$(event.target).removeClass(\"meal-is-in\")\n\n    //console.log(this.state.mealplan);\n    //console.log(id);\n    let newMealPlan = [... this.state.mealplan.meals];\n    let filteredMeal = newMealPlan.filter(meal => meal.time == id);\n    //console.log(filteredMeal[0])\n    event.preventDefault();\n    this.setState({\n      meal: filteredMeal[0],\n    });\n    //console.log(this.state.meal)\n  }\n\n  onDragOver(event,className){\n        $(\".highlight\").removeClass(\"highlight\")\n        event.preventDefault();\n        $(event.target).addClass(\"highlight\");\n    }\n\n  onDropMeal(e,meal){\n    console.log(meal)\n    $(\".highlight\").removeClass(\"highlight\")\n    if(!($(e.target).hasClass(\"meal-is-in\"))){\n      console.log(e.target.id);\n      $(e.target).addClass(\"meal-is-in\");\n      let newMeal = {... meal};\n      newMeal.day = e.target.parentElement.id;\n      newMeal.time = e.target.id;\n      //console.log(meal);\n      //console.log(\"we are at onDrop\");\n      let updatedPlan = [... this.state.mealplan.meals];\n      //console.log(updatedPlan);\n      updatedPlan.push(newMeal);\n      console.log(updatedPlan);\n      this.setState({\n        mealplan: {\n          meals:updatedPlan,\n          nutrients: this.state.mealplan.nutrients\n        }\n      })\n    }\n  }\n\n  onDropRecipe(e,meal){\n    //console.log(meal);\n    this.removeHighlights();\n      this.setState({\n        recipe:{\n          name: meal.recipe.name,\n          ingredients: meal.recipe.ingredients,\n        },\n        nutrients: meal.recipe.nutrients,\n        barGraphTitle: meal.recipe.name,\n      })\n  }\n\n  filterCategories(object,category){\n    console.log(object,category)\n    let arrayForD3 = []\n    let nutrients = Object.keys(object);\n    //console.log(nutrients);\n    //console.log(this.state.recipe.ingredients[0].nutrients[nutrients[0]].category);\n    nutrients.map(nutrient=>{\n      if(this.state.recipe.ingredients[0].nutrients[nutrient].category === category){\n        //console.log(\"täällä\")\n        let nutrientObj = {};\n        nutrientObj['name'] = nutrient;\n        nutrientObj['amount'] = object[nutrient];\n        arrayForD3.push(nutrientObj);\n      }\n    })\n    //console.log(arrayForD3);\n    return arrayForD3\n  }\n\n  mealPlanIngredients(mealplan){\n    console.log(mealplan);\n    //console.log(this.state)\n    let nutrients = Object.keys(this.state.nutrients)\n    let newNutrients = {... this.state.nutrients}\n\n    function fillNewNut(meal){\n      let tempNutrients = {\n            calcium: 0,\n            magnesium: 0,\n            potassium: 0,\n            vitaminB12: 0,\n            vitaminD: 0,\n            vitaminC: 0,\n            zinc: 0,\n            iron: 0,\n            dailyCal: 0,\n            protein: 0,\n            fat: 0,\n            carbs: 0,\n            }\n      nutrients.map(nutrient=>{\n          //console.log(meal);\n          tempNutrients[nutrient] += meal.recipe.nutrients[nutrient]\n      })\n      return tempNutrients\n    }\n    //console.log(this.state.mealplan);\n    //console.log(this.state.mealplan.meals);\n    this.state.mealplan.meals.map(\n      (meal,i)=>{\n        console.log(\"we are here\");\n        console.log(meal);\n        let tempNut = fillNewNut(meal);\n        nutrients.map(nutrient=>{\n          if(i==0){\n            newNutrients[nutrient] = tempNut[nutrient]\n          }else{\n            newNutrients[nutrient] += tempNut[nutrient]\n          }\n        })\n        console.log(newNutrients);\n      }\n    )\n\n    this.setState({\n      nutrients: newNutrients,\n      mealplan:{\n        meals: this.state.mealplan.meals,\n        nutrients: newNutrients\n      }\n      }\n    )\n  }\n\n\n\n  render(){\n    console.log(this.state.nutrients);\n    this.setNewIds(this.state.recipe.ingredients);\n    this.checkNutPerIngredient(this.state.hover);\n    const meals = [\"breakfast\", \"lunch\", \"dinner\"]\n    return(\n      <div>\n      <div className=\"row\">\n          <AddNewRecipe\n            onSubmit = {(event => this.handleSubmit(event))}\n            onChange={(event)=>(this.setState({nameBar:event.target.value}))}\n          />\n      </div>\n      <div className=\"row\">\n            <div className=\"col ingredients ui-box\"\n                  id = \"recipe\"\n                  onDrop = {(e,meal) => this.onDropRecipe(e, this.state.meal)}\n                  onDragOver={((event, className) => this.onDragOver(event, \"ingredients\"))}\n            >\n                  <h2 onClick={()=>{\n                        let newMicros = fillNutrients(this.state.recipe.ingredients);\n                        return this.setState({\n                            recipe:{\n                                ingredients: this.state.recipe.ingredients,\n                                name: this.state.recipe.name\n                              },\n                              nutrients: newMicros,\n                          })\n                      }}>{this.state.recipe.name}\n                  </h2>\n                  <div>\n                    {this.state.recipe.ingredients.map((ing,index) => {\n                      return(\n                      <Controller\n                        name = {ing.name}\n                        hover = {this.state.hover}\n                        ing = {ing}\n                        key={index}\n                        id={index}\n                        setMicros={(name) => {this.setMicrosPerIngredient(name)}}\n                        amount = {ing.amount}\n                        onChange = {(e) => {this.handleChange(e)}}\n                        remove = {(id) => this.handleDelete(id)}\n                      />\n                    )})}\n                  </div>\n                  <div className=\"row buttons\">\n                    <div className=\"col\">\n                      <button className = \"btn btn-block btn-primary\" onClick={()=> this.addIngredient()}>Add Ingredient</button>\n                    </div>\n                    <div className=\"col\">\n                      <button className = \"btn btn-block btn-primary\" draggable onDrag = {(e)=>this.onDragRecipe(e)}>Drag To Meal Plan</button>\n                    </div>\n                  </div>\n            </div>\n            <div className=\"minimize\" onClick = {(e) => {this.minimize(e)}}>\n              <p>M I N I M I Z E {\"<\"}</p>\n            </div>\n\n            <div className=\"col bargraphs ui-box\">\n                <Charts title={this.state.recipe.name}\n                        nutrients = {this.state.nutrients}\n                        filterData = {(nutrients,category) => this.filterCategories(nutrients, category)}\n                        hideCategory = {(event)=> this.hideCategory(event)}\n                />\n            </div>\n            <div className=\"minimize\" onClick = {(e) => {this.minimize(e)}}>\n              <p>M I N I M I Z E {\"<\"}</p>\n            </div>\n\n        </div>\n\n        <div className=\"mealplan\">\n            <Mealplan\n                onDrag={(event =>this.onDragMeal(event))}\n                onDrop={(event,meal) => this.onDropMeal(event, this.state.meal)}\n                onDragOver={(event) => this.onDragOver(event)}\n                onClick={(event,array) => this.deleteMeal(event.target.id, this.state.mealplan.meals)}\n                mealPlanIngredients = {(mealplan)=> this.mealPlanIngredients(this.state.mealplan)}\n                meals = {this.state.mealplan.meals}\n            />\n        </div>\n\n    </div>\n\n    )\n  }\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Infograph />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}