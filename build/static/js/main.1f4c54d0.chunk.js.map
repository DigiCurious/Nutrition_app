{"version":3,"sources":["addNewRecipe.js","row.js","mealplan.js","searchBar.js","bargraph.js","piegraph.js","charts.js","controller.js","index.js"],"names":["AddNewRecipe","className","onSubmit","event","props","id","onChange","type","React","Component","Row","this","idForRow","map","meal","i","label","mealplan","meals","m","time","length","recipe","name","draggable","onDrag","onDrop","onDragOver","onClick","array","onClickMinus","setCounter","Mealplan","state","dayCounter","console","log","temp","setState","days","weekdays","push","key","deleteRow","bind","mealPlanIngredients","scope","value","e","target","min","max","SearchBar","filterText","Bargraph","drawBarChart","dataSet","filter","d","includes","data","handleFilter","width","$","height","d3","refs","bargraph","selectAll","remove","svg","append","attr","dataAmounts","amount","scale","domain","range","clamp","barHeight","enter","text","ref","term","drawMacros","radius","Math","piegraph","dataset","theSum","forEach","dPoint","newData","color","data_ready","pie","innerRadius","outerRadius","Charts","title","hideCategory","filterData","nutrients","Controller","setMicros","data-index","ingredients","createData","round","random","calcium","category","subCategory","magnesium","potassium","vitaminB12","vitaminD","vitaminC","zinc","iron","dailyCal","protein","floor","fat","carbs","fillNutrients","ingredient","Object","keys","nutrient","calculateNutrients","Infograph","nameBar","hover","newNutrients","barGraphTitle","preventDefault","nameRecipe","newRecipe","newMicros","theIng","ing","index","idStr","toString","find","addClass","removeClass","checkNutPerIngredient","el","newIngredients","slice","getAttribute","Number","innerText","prev","toggleClass","filtIngs","setNewIds","newMealplan","parentId","parent","filtPlan","day","document","getElementById","querySelector","newIngs","newMeal","keydown","keyCode","filteredMeal","hasClass","parentElement","updatedPlan","removeHighlights","object","arrayForD3","nutrientObj","tempNut","tempNutrients","fillNewNut","handleSubmit","onDropRecipe","setMicrosPerIngredient","handleChange","handleDelete","addIngredient","onDragRecipe","minimize","filterCategories","onDragMeal","onDropMeal","deleteMeal","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f4c54d0.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass AddNewRecipe extends React.Component {\n\n  render(){\n    return(\n      <div className=\"col addNew\">\n          <form className=\"form-inline\" onSubmit = {(event) => this.props.onSubmit(event)}>\n              <div id=\"recipeName\" className=\"form-group mb-2\">\n                  <label>Recipe Name</label>\n                  <input id=\"recipeName\" className = \"form-control\" onChange={(event)=>this.props.onChange(event)}/>\n              </div>\n              <div className=\"form-group mb-2\">\n                  <button type=\"submit\" className = \"btn btn-block btn-primary\"\n                    >\n                    Create a new recipe\n                  </button>\n              </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default AddNewRecipe\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass Row extends React.Component {\n\n  render(){\n    //console.log(this.props.meals);\n    const meals = ['breakfast','lunch','dinner']\n    return(\n                <tr id={this.props.idForRow}>\n                    {meals.map((meal,i) => {\n                      let label = ''\n                      //console.log(meal)\n                      //console.log(this.props.meals[i]);\n                      this.props.mealplan.meals.map(m => {\n                        if(m.time === meal && this.props.mealplan.meals.length > 0){\n                          label = m.recipe.name;\n                        }\n                      })\n                      //console.log(label)\n                      return(\n                      <td id={meal}\n                            draggable\n                            onDrag={this.props.onDrag}\n                            className=\"meal\"\n                            onDrop={this.props.onDrop}\n                            onDragOver={this.props.onDragOver}\n                            onClick={this.props.onClick}\n                      >\n                      {label}\n                      </td>\n                    )})\n                  }\n                  <td><button className=\"btn btn-block btn-primary\"\n                              onClick = {\n                                (event,array) => {this.props.onClickMinus(event,this.props.mealplan.meals)\n                                this.props.setCounter();\n                                }\n                              }\n                      > - </button></td>\n                </tr>\n    )\n  }\n}\n\nexport default Row\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\nimport Row from './row';\n\nclass Mealplan extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dayCounter: '1'\n    }\n  }\n\n  setCounter(){\n    console.log(this.state);\n    let temp = this.state.dayCounter - 1;\n    this.setState({\n      dayCounter: temp\n    })\n  }\n\n  render(){\n    let days = [];\n    let weekdays = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\",\"saturday\",\"sunday\"];\n    const meals = ['breakfast','lunch','dinner']\n    for(let i=0; i<this.state.dayCounter; i++){\n      days.push(<Row key={i}\n                           onDrag = {this.props.onDrag}\n                           idForRow={weekdays[i]}\n                           onDrop={this.props.onDrop}\n                           onDragOver={this.props.onDragOver}\n                           onClick={this.props.onClick}\n                           onClickMinus={this.props.deleteRow}\n                           setCounter = {this.setCounter.bind(this)}\n                           mealplan = {this.props.mealplan}\n                />)\n    }\n\n    return(\n      <div>\n        <div className=\"row\">\n            <div className=\"col-2\">\n              <h2>Meal Plan</h2>\n            </div>\n            <div className=\"col\">\n              <button className=\"btn btn-primary\"\n                      onClick={this.props.mealPlanIngredients}\n              >\n                Click to see the nutrients\n              </button>\n            </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col-11\">\n        <table className=\"table\">\n            <thead>\n              <tr>\n                {meals.map(meal => (\n                  <th scope=\"col-4\">{meal}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n                {days}\n            </tbody>\n        </table>\n        </div>\n        <div className=\"col-1\">\n            <input value={this.state.dayCounter} onChange={e=>this.setState({dayCounter:e.target.value})} className=\"form-control\" type=\"number\" name=\"quantity\" min=\"1\" max=\"7\"/>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Mealplan\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass SearchBar extends React.Component {\n\n  render(){\n    const meals = ['breakfast','lunch','dinner']\n    return(\n      <div className=\"row searchBar\">\n        <div className=\"col-5\">\n          <form>\n            <div className=\"form-group\">\n              <input className=\"form-control\" value={this.props.filterText} onChange = {(event) => {this.props.onChange(event.target.value)}}></input>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar\n","import React, { Component } from 'react'\nimport * as d3 from 'd3';\nimport $ from 'jquery';\nimport SearchBar from './searchBar';\n\nclass Bargraph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          filterText: '',\n        }\n        this.drawBarChart = this.drawBarChart.bind(this)\n    }\n\n    componentDidMount(){\n      this.drawBarChart();\n    }\n\n    componentDidUpdate(){\n      this.drawBarChart();\n    }\n\n    handleFilter(){\n      //console.log(this.props.dataSet);\n      let newData = [... this.props.dataSet];\n      let filteredData = newData.filter((d)=>(d.name.includes(this.state.filterText)))\n      return filteredData;\n\n    }\n\n    drawBarChart(){\n      //console.log($( \".bargraph\" ).width())\n      //console.log(this.props.dataSet);\n      let data = this.handleFilter();\n      let width = $( \".bargraph\" ).width()*.75;\n      //console.log(width)\n      let height = data.length * 50\n      //console.log(width)\n      d3.select(this.refs.bargraph).selectAll(\"svg\").remove();\n\n      const svg = d3.select(this.refs.bargraph)\n        .append('svg')\n        .attr('width', \"100%\")\n        .attr('height', height)\n\n      var dataAmounts = [];\n      data.map(d => {dataAmounts.push(d.amount)})\n      //console.log(dataAmounts);\n      var scale = d3.scaleLinear()\n                  .domain([d3.min(dataAmounts), d3.max(dataAmounts)])\n                  .range([1, width])\n                  .clamp(false)\n\n      //console.log(scale(data[1].amount));\n\n      var barPadding = 5;\n      var barHeight = (height/data.length - 5);\n      //console.log(data);\n\n        svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"y\", function(d,i){return (i * (barHeight + barPadding))})\n        .attr(\"x\", width/3)\n        .attr(\"height\", barHeight)\n        .attr(\"width\", function(d){return (scale(d.amount) + \"px\")})\n        .attr(\"fill\", \"blue\")\n\n        svg.selectAll('text')\n          .data(data)\n          .enter()\n          .append('text')\n          .attr('x', 10)\n          .attr('y', (d, i) => i * (barHeight + barPadding) + barHeight/2)\n          .text(d => d.name)\n      }\n\n    render() {\n        //console.log(this.props.dataSet);\n        return(\n          <div className=\"bargraph\" ref=\"bargraph\">\n            <SearchBar\n              filterText= {this.state.filterText}\n              onChange = {(term) => {this.setState({filterText: term});}}\n            />\n          </div>\n        );\n    }\n}\nexport default Bargraph\n","import React, { Component } from 'react'\nimport * as d3 from 'd3';\nclass Bargraph extends Component {\n    constructor(props) {\n        super(props)\n        this.drawMacros = this.drawMacros.bind(this)\n    }\n\n    componentDidMount(){\n      this.drawMacros()\n    }\n\n    componentDidUpdate(){\n      this.drawMacros()\n    }\n\n    drawMacros(){\n\n    \t// set the dimensions and margins of the graph\n    var width = 450;\n    var height = 450;\n    var margin = 40;\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n\n    d3.select(this.refs.piegraph).selectAll(\"svg\").remove();\n\n    var svg = d3.select(this.refs.piegraph)\n      .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // Create dummy data\n    var dataset = this.props.dataSet;\n    //console.log(dataset);\n    var theSum = 0;\n    dataset.forEach((dPoint) =>{\n      theSum += dPoint.amount\n    });\n    //console.log(theSum)\n    var newData = [];\n    dataset.forEach((d)=>{\n      newData.push((d.amount/theSum)*100)\n    })\n    //console.log(newData);\n\n\n\n    // set the color scale\n    var color = d3.scaleOrdinal()\n      .domain(newData)\n      .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\"])\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie()\n      .value(function(d) {return d.value; })\n    var data_ready = pie(d3.entries(newData))\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('sector')\n      .data(data_ready)\n      .enter()\n      .append('path')\n      .attr('d', d3.arc()\n        .innerRadius(100)\n        .outerRadius(radius)\n      )\n      .attr('fill', function(d){ return(color(d.data.key)) })\n\n    }\n\n\n    render() { return(<div className=\"piegraph\" ref=\"piegraph\"></div>); }\n}\nexport default Bargraph\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\nimport Bargraph from './bargraph'\nimport Piegraph from './piegraph'\n\nclass Charts extends React.Component {\n\n  render(){\n    //console.log(this.props.nutrients);\n    const meals = ['breakfast','lunch','dinner']\n    return(\n      <div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Nutrients of {this.props.title}</h2>\n          </div>\n        </div>\n        <nav>\n            <ul className=\"nav nav-tabs\">\n              <li className=\"active nav-item\" onClick={event => this.props.hideCategory(event)}>\n                Micros\n              </li>\n              <li className=\"nav-item\" onClick={event => this.props.hideCategory(event)}>\n                Macros\n              </li>\n            </ul>\n        </nav>\n        <div id=\"Macros\" className=\"nutrients hide\">\n            <Piegraph\n              dataSet = {this.props.filterData(this.props.nutrients, \"macro\")}\n            />\n        </div>\n        <div id=\"Micros\" className=\"nutrients\">\n            <Bargraph\n              dataSet = {this.props.filterData(this.props.nutrients, \"micro\")}\n            />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Charts\n","import React from 'react';\nimport './index.css';\nimport './bootstrap.css';\n\nclass Controller extends React.Component {\n\n  render(){\n    return(\n      <div id = {this.props.id} className=\"row ingredient\">\n        <div className=\"col-3\">\n          <p onClick={()=>this.props.setMicros(this.props.name)}>{this.props.name}</p>\n        </div>\n        <div className=\"col slidecontainer\">\n          <input\n            data-index={this.props.id}\n            type=\"range\"\n            min=\"0\"\n            max=\"100\" value = {this.props.amount}\n            className=\"slider\"\n            id=\"myRange\"\n            onChange={this.props.onChange}\n          />\n        </div>\n        <div className=\"col-1\">\n          <p>{this.props.amount}</p>\n        </div>\n        <div className=\"col-2\">\n          <button\n          className = \"btn btn-block btn-primary\"\n          onClick = {() => this.props.remove(this.props.id)}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Controller\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.css';\nimport $ from 'jquery';\nimport AddNewRecipe from './addNewRecipe'\nimport Mealplan from './mealplan'\nimport Charts from './charts'\nimport Controller from './controller'\n\nconst ingredients = [];\n\nfunction createData(id){\n  const amount = Math.round(Math.random()*100);\n  const ingredient = {\n    name: \"ingredient\" + id,\n    id: id,\n    amount: amount,\n    nutrients:{\n        calcium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                },\n        magnesium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        potassium: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        vitaminB12: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        vitaminD: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        vitaminC: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'vitamins'\n                  },\n        zinc: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        iron: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        dailyCal: {\n                  amount: Math.round(Math.random())/4,\n                  category: 'micro',\n                  subCategory: 'minerals'\n                  },\n        protein: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n        fat: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n        carbs: {\n                  amount: Math.floor(Math.random()*33),\n                  category:'macro'\n        },\n    }\n  }\n\n  return ingredient;\n\n}\n\nfor(var i=0; i<10; i++){\n  ingredients.push(createData(i));\n}\n\nfunction calculateNutrients(ingredient, nutrients){\n  Object.keys(ingredient.nutrients).map((nutrient)=>{\n    if(!nutrients[nutrient]){\n      nutrients[nutrient] = ingredient.amount * ingredient.nutrients[nutrient].amount;\n      //console.log(micros[nutrient]);\n    }else{\n      nutrients[nutrient] += ingredient.amount * ingredient.nutrients[nutrient].amount;\n      //console.log(micros[nutrient]);\n    }\n  })\n}\n\nfunction fillNutrients(ingredients){\n  let nutrients = {};\n  ingredients.map(ingredient=>{\n      calculateNutrients(ingredient,nutrients);\n    })\n  return nutrients\n}\n\nclass Infograph extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nameBar: '',\n      recipe: {\n        name: 'Lasagne',\n        ingredients: ingredients,\n      },\n      nutrients:fillNutrients(ingredients),\n      hover: '',\n      meal: null,\n      mealplan: {\n        meals:[],\n        nutrients:{}\n      },\n      filterText: '',\n      d3: ''\n    }\n  }\n\n  setMicrosPerIngredient(name){\n    //console.log(name);\n    let newIngredients = this.state.recipe.ingredients.filter(ingredient=>(\n      ingredient.name == name\n    ))\n    //console.log(newIngredients);\n    let newNutrients = fillNutrients(newIngredients);\n    //console.log(newNutrients);\n    this.setState({\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: this.state.recipe.ingredients,\n        nutrients:newNutrients,\n      },\n      barGraphTitle: name,\n    });\n  }\n\n  handleSubmit(event){\n\n    event.preventDefault();\n    let nameRecipe = this.state.nameBar;\n    //console.log(nameRecipe)\n    let newRecipe = [];\n    for(var i =0; i<10; i++){\n      newRecipe.push(createData(i));\n    }\n    let newMicros = fillNutrients(newRecipe);\n    //console.log(newMicros)\n\n    this.setState(\n      {\n        recipe:{\n          name: nameRecipe,\n          ingredients: newRecipe,\n        },\n        nutrients:newMicros,\n        barGraphTitle: nameRecipe,\n      }\n    );\n  }\n\n  checkNutPerIngredient(nutrient){\n      //console.log(nutrient);\n      let theIng = this.state.recipe.ingredients[0];\n      this.state.recipe.ingredients.map((ing, index) => {\n        if(ing.amount > 0 && nutrient.length>2 && ing.amount * ing.nutrients[nutrient].amount > ing.amount * theIng.nutrients[nutrient].amount){\n          //console.log(\"we are here\");\n          //console.log(\"ollaan täällä\")\n          theIng = ing;\n          //console.log(theIng.id);\n        }\n      })\n\n      let id = nutrient.length>2 ? theIng.id : null\n      if(id !== null){\n        let idStr = id.toString();\n        var el = $('#'+ idStr ).find('.slider');\n        //console.log(el);\n        el.addClass(\"highlight\")\n      }\n\n      //return theIng.id;\n  }\n\n  highlightIngredient(event,nutrient){\n  //  console.log();\n    $('.bargraphs').find('p').removeClass(\"highlight-text\");\n    $(event.target).addClass(\"highlight-text\")\n    this.setState({\n      hover: nutrient\n    })\n    if(this.state.hover.length > 0){\n        this.checkNutPerIngredient(nutrient);\n    }\n  }\n\n  setNewIds(array){\n    array.map((el,index) => el.id = index)\n  }\n\n  removeHighlights(){\n    $('.slidecontainer').find('.slider').removeClass(\"highlight\")\n    $('.highlight').removeClass(\"highlight\");\n    $('.highlight-text').removeClass(\"highlight-text\");\n    this.setState({\n      hover: '',\n    })\n  }\n\n  handleChange(e){\n    const newIngredients = this.state.recipe.ingredients.slice();\n    newIngredients[e.target.getAttribute(\"data-index\")].amount = Number(e.target.value);\n    const newNutrients = fillNutrients(newIngredients);\n\n    //console.log(newIngredients[e.target.getAttribute(\"data-index\")].amount * newIngredients[e.target.getAttribute(\"data-index\")].nutrients[\"calcium\"].amount)\n    this.setState(\n      {\n        recipe:{\n          name: this.state.recipe.name,\n          ingredients: newIngredients,\n        },\n        nutrients: newNutrients,\n      }\n    );\n  }\n\n  hideCategory(e){\n      $(\".nutrientTab\").removeClass(\"active\");\n      $(e.target).addClass(\"active\");\n      //console.log(e.target);\n      //console.log(e.target.innerText);\n      $(\".nutrients\").addClass(\"hide\");\n      $(\"#\" + e.target.innerText).removeClass(\"hide\");\n    }\n\n  minimize(e){\n//    console.log(\"HERE\")\n    $(e.target).prev().toggleClass(\"hide\")\n    this.setState({\n      mealplan: this.state.mealplan\n    });\n  }\n\n  handleDelete(id){\n      //console.log(\"REMOVE\")\n      //console.log(id)\n      let newIngredients = [... this.state.recipe.ingredients];\n      let filtIngs = newIngredients.filter(function(ing){\n        return(ing.id != id);\n      });\n      const newNutrients = fillNutrients(filtIngs);\n      //console.log(filtIngs);\n      this.setNewIds(this.state.recipe.ingredients);\n      this.setState({\n        recipe:{\n          name: this.state.recipe.name,\n          ingredients: filtIngs,\n        },\n        nutrients: newNutrients\n      });\n  }\n\n  deleteMeal(event,array){\n     console.log(\"REMOVE\")\n\n     let newMealplan = []\n     if(array.length>1){\n       newMealplan = [... array];\n     }else{\n       newMealplan.push(array[0])\n     }\n     console.log(event.target.id);\n     let parentId = $(event.target).parent()[0].id;\n     console.log(parentId)\n     console.log($('#'+ parentId).find($('#' + event.target.id))[0]);\n     //console.log(id);\n     //console.log(newMealplan[0].time)\n\n     let filtPlan = [];\n     newMealplan.map((meal,i) => {\n       if(!((meal.time === event.target.id) && (meal.day === parentId))){\n         filtPlan.push(meal);\n       }})\n     let newNutrients = this.mealPlanIngredients(filtPlan);\n     this.setState({\n         mealplan: {\n           meals: filtPlan,\n           nutrients: newNutrients,\n         }\n     });\n     let parent = document.getElementById(parentId)\n     let el = parent.querySelector(\"#\"+ event.target.id);\n     console.log(el);\n     $(el).removeClass(\"meal-is-in\");\n     //el.text(\"POISTETTU\");\n }\n\n  deleteRow(event,array){\n      console.log(\"REMOVE\")\n      console.log(array);\n      console.log($(event.target).parent().parent());\n      let newMealplan = []\n      if(array.length>1){\n        newMealplan = [... array];\n      }else{\n        newMealplan.push(array[0])\n      }\n      let parentId = $(event.target).parent().parent()[0].id;\n      console.log(parentId)\n      //console.log(id);\n      //console.log(newMealplan[0].time)\n\n      let filtPlan = [];\n      newMealplan.map((meal,i) => {\n        if(meal.day !== parentId){\n          filtPlan.push(meal);\n        }})\n      let newNutrients = this.mealPlanIngredients(filtPlan);\n      this.setState({\n          mealplan: {\n            meals: filtPlan,\n            nutrients: newNutrients,\n          }\n      });\n  }\n\n  addIngredient(){\n    const newIngs = [...this.state.recipe.ingredients];\n    //console.log(\"NEW INGS IS \" + newIngs);\n    newIngs.push(createData(this.state.recipe.ingredients.length));\n    let newNutrients = fillNutrients(newIngs);\n    this.setState({\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: newIngs,\n      },\n      nutrients: newNutrients,\n      hover:'',\n    });\n  }\n\n  onDragRecipe(event, meal){\n    //console.log(\"onDragRecipe\")\n    let newMeal = {\n      recipe:{\n        name: this.state.recipe.name,\n        ingredients: this.state.recipe.ingredients,\n        nutrients: this.state.nutrients,\n      },\n      barGraphTitle: this.state.barGraphTitle,\n      day: '',\n      time: '',\n    }\n    //console.log(newMeal)\n    event.preventDefault();\n    this.setState({\n        meal: newMeal,\n    });\n    //console.log(this.state.meal)\n  }\n\n  onDragMeal(event){\n    //console.log(\"onDragMeal\")\n    let id = event.target.id;\n\n    $(\"#\" + id).keydown(e=>{\n      if(e.keyCode == 91){\n        $(\"#\" + id).removeClass(\"meal-is-in\");\n        console.log(\"POHJASSA\")\n      }\n    })\n\n    //$(event.target).removeClass(\"meal-is-in\")\n\n    //console.log(this.state.mealplan);\n    //console.log(id);\n    let newMealPlan = [... this.state.mealplan.meals];\n    let filteredMeal = newMealPlan.filter(meal => meal.time == id);\n    //console.log(filteredMeal[0])\n    event.preventDefault();\n    this.setState({\n      meal: filteredMeal[0],\n    });\n    //console.log(this.state.meal)\n  }\n\n  onDragOver(event,className){\n        $(\".highlight\").removeClass(\"highlight\")\n        event.preventDefault();\n        $(event.target).addClass(\"highlight\");\n    }\n\n  onDropMeal(e,meal){\n  //  console.log(meal)\n    $(\".highlight\").removeClass(\"highlight\")\n    if(!($(e.target).hasClass(\"meal-is-in\"))){\n      console.log(e.target.id);\n      $(e.target).addClass(\"meal-is-in\");\n      let newMeal = {... meal};\n      newMeal.day = e.target.parentElement.id;\n      newMeal.time = e.target.id;\n      //console.log(meal);\n      //console.log(\"we are at onDrop\");\n      let updatedPlan = [... this.state.mealplan.meals];\n      //console.log(updatedPlan);\n      updatedPlan.push(newMeal);\n    //  console.log(updatedPlan);\n      this.setState({\n        mealplan: {\n          meals:updatedPlan,\n          nutrients: this.state.mealplan.nutrients\n        }\n      })\n    }\n  }\n\n  onDropRecipe(e,meal){\n    //console.log(meal);\n    this.removeHighlights();\n      this.setState({\n        recipe:{\n          name: meal.recipe.name,\n          ingredients: meal.recipe.ingredients,\n        },\n        nutrients: meal.recipe.nutrients,\n        barGraphTitle: meal.recipe.name,\n      })\n  }\n\n  filterCategories(object,category){\n//    console.log(object,category)\n    let arrayForD3 = []\n    let nutrients = Object.keys(object);\n    //console.log(nutrients);\n    //console.log(this.state.recipe.ingredients[0].nutrients[nutrients[0]].category);\n    nutrients.map(nutrient=>{\n      if(this.state.recipe.ingredients[0].nutrients[nutrient].category === category){\n        //console.log(\"täällä\")\n        let nutrientObj = {};\n        nutrientObj['name'] = nutrient;\n        nutrientObj['amount'] = object[nutrient];\n        arrayForD3.push(nutrientObj);\n      }\n    })\n    //console.log(arrayForD3);\n    return arrayForD3\n  }\n\n  mealPlanIngredients(mealplan){\n    console.log(mealplan);\n    //console.log(this.state)\n    let nutrients = Object.keys(this.state.nutrients)\n    let newNutrients = {... this.state.nutrients}\n\n    function fillNewNut(meal){\n      let tempNutrients = {\n            calcium: 0,\n            magnesium: 0,\n            potassium: 0,\n            vitaminB12: 0,\n            vitaminD: 0,\n            vitaminC: 0,\n            zinc: 0,\n            iron: 0,\n            dailyCal: 0,\n            protein: 0,\n            fat: 0,\n            carbs: 0,\n            }\n      nutrients.map(nutrient=>{\n          //console.log(meal);\n          tempNutrients[nutrient] += meal.recipe.nutrients[nutrient]\n      })\n      return tempNutrients\n    }\n    //console.log(this.state.mealplan);\n    //console.log(this.state.mealplan.meals);\n    this.state.mealplan.meals.map(\n      (meal,i)=>{\n        console.log(\"we are here\");\n        console.log(meal);\n        let tempNut = fillNewNut(meal);\n        nutrients.map(nutrient=>{\n          if(i==0){\n            newNutrients[nutrient] = tempNut[nutrient]\n          }else{\n            newNutrients[nutrient] += tempNut[nutrient]\n          }\n        })\n        console.log(newNutrients);\n      }\n    )\n\n    this.setState({\n      nutrients: newNutrients,\n      mealplan:{\n        meals: this.state.mealplan.meals,\n        nutrients: newNutrients\n      }\n      }\n    )\n  }\n\n\n\n  render(){\n    console.log(this.state.mealplan);\n    this.setNewIds(this.state.recipe.ingredients);\n    this.checkNutPerIngredient(this.state.hover);\n    const meals = [\"breakfast\", \"lunch\", \"dinner\"]\n    return(\n      <div>\n      <div className=\"row\">\n          <AddNewRecipe\n            onSubmit = {(event => this.handleSubmit(event))}\n            onChange={(event)=>(this.setState({nameBar:event.target.value}))}\n          />\n      </div>\n      <div className=\"row\">\n            <div className=\"col ingredients ui-box\"\n                  id = \"recipe\"\n                  onDrop = {(e,meal) => this.onDropRecipe(e, this.state.meal)}\n                  onDragOver={((event, className) => this.onDragOver(event, \"ingredients\"))}\n            >\n                  <h2 onClick={()=>{\n                        let newMicros = fillNutrients(this.state.recipe.ingredients);\n                        return this.setState({\n                            recipe:{\n                                ingredients: this.state.recipe.ingredients,\n                                name: this.state.recipe.name\n                              },\n                              nutrients: newMicros,\n                          })\n                      }}>{this.state.recipe.name}\n                  </h2>\n                  <div>\n                    {this.state.recipe.ingredients.map((ing,index) => {\n                      return(\n                      <Controller\n                        name = {ing.name}\n                        hover = {this.state.hover}\n                        ing = {ing}\n                        key={index}\n                        id={index}\n                        setMicros={(name) => {this.setMicrosPerIngredient(name)}}\n                        amount = {ing.amount}\n                        onChange = {(e) => {this.handleChange(e)}}\n                        remove = {(id) => this.handleDelete(id)}\n                      />\n                    )})}\n                  </div>\n                  <div className=\"row buttons\">\n                    <div className=\"col\">\n                      <button className = \"btn btn-block btn-primary\" onClick={()=> this.addIngredient()}>Add Ingredient</button>\n                    </div>\n                    <div className=\"col\">\n                      <button className = \"btn btn-block btn-primary\" draggable onDrag = {(e)=>this.onDragRecipe(e)}>Drag To Meal Plan</button>\n                    </div>\n                  </div>\n            </div>\n            <div className=\"minimize\" onClick = {(e) => {this.minimize(e)}}>\n              <p>M I N I M I Z E {\"<\"}</p>\n            </div>\n\n            <div className=\"col bargraphs ui-box\">\n                <Charts title={this.state.recipe.name}\n                        nutrients = {this.state.nutrients}\n                        filterData = {(nutrients,category) => this.filterCategories(nutrients, category)}\n                        hideCategory = {(event)=> this.hideCategory(event)}\n                />\n            </div>\n            <div className=\"minimize\" onClick = {(e) => {this.minimize(e)}}>\n              <p>M I N I M I Z E {\"<\"}</p>\n            </div>\n\n        </div>\n\n        <div className=\"mealplan\">\n            <Mealplan\n                onDrag={(event =>this.onDragMeal(event))}\n                onDrop={(event,meal) => this.onDropMeal(event, this.state.meal)}\n                onDragOver={(event) => this.onDragOver(event)}\n                onClick={(event,array) => this.deleteMeal(event, this.state.mealplan.meals)}\n                mealPlanIngredients = {(mealplan)=> this.mealPlanIngredients(this.state.mealplan)}\n                mealplan = {this.state.mealplan}\n                deleteRow = {(event,array) => this.deleteRow(event,array)}\n            />\n        </div>\n\n    </div>\n\n    )\n  }\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Infograph />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}